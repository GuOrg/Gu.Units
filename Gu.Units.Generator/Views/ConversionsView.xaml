<!--  ReSharper disable Xaml.BindingWithContextNotResolved  -->
<UserControl x:Class="Gu.Units.Generator.ConversionsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converters="clr-namespace:Gu.Units.Generator.Converters"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Gu.Units.Generator"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             DataContext="{Binding Conversions, Source={x:Static local:MainVm.Instance}}"
             mc:Ignorable="d">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <GroupBox Grid.Row="0" Header="Fractions">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0"
                           Grid.Column="0"
                           Text="{Binding Unit.Name, StringFormat='BaseUnit: {0}'}" />
                <UniformGrid Grid.Row="1"
                             MinHeight="100"
                             Rows="1">
                    <GroupBox Header="Prefixes" Visibility="{Binding PrefixConversions.HasItems, Converter={converters:BooleanToVisibilityConverter WhenFalse=Collapsed, WhenTrue=Visible}}">
                        <local:PrefixConversionsView />
                    </GroupBox>

                    <GroupBox Header="Subparts" Visibility="{Binding PartConversions.HasItems, Converter={converters:BooleanToVisibilityConverter WhenFalse=Collapsed, WhenTrue=Visible}}">
                        <local:PartConversionsView />
                    </GroupBox>
                </UniformGrid>

                <GroupBox Grid.Row="2" Header="FactorConversions">
                    <local:FactorConversionsView />
                </GroupBox>

                <GroupBox Grid.Row="3" Header="CustomConversions">
                    <local:CustomConversionsView />
                </GroupBox>

                <GroupBox Grid.Row="4" Header="All">
                    <DataGrid AutoGenerateColumns="False"
                              CanUserDeleteRows="False"
                              ItemsSource="{Binding AllConversions}"
                              SelectedItem="{Binding SelectedConversion}">
                        <DataGrid.InputBindings>
                            <KeyBinding Key="Delete" Command="{Binding DeleteSelectedCommand}" />
                        </DataGrid.InputBindings>
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="Status">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate DataType="{x:Type local:ConversionVm}">
                                        <Ellipse Width="10"
                                                 Height="10"
                                                 Fill="{Binding CanRoundtrip, Mode=OneWay, Converter={converters:BooleanToBrushConverter WhenFalse=Red, WhenNull=Gray, WhenTrue=GreenYellow}}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Binding="{Binding Conversion.Name}" Header="Unit" />
                            <DataGridTextColumn Binding="{Binding Conversion.Symbol}" Header="Symbol" />
                            <DataGridTextColumn Binding="{Binding SymbolConversion}"
                                                Header="Conversion"
                                                IsReadOnly="True" />
                            <DataGridTextColumn Binding="{Binding Conversion.ToSi}"
                                                Header="ToSi"
                                                IsReadOnly="True" />
                            <DataGridTextColumn Binding="{Binding Conversion.FromSi}"
                                                Header="FromSi"
                                                IsReadOnly="True" />
                            <!--<DataGridTextColumn Binding="{Binding Formula}" Header="Formula" />-->
                        </DataGrid.Columns>
                    </DataGrid>
                </GroupBox>
            </Grid>
        </GroupBox>

        <GroupBox Grid.Row="1" Header="Overloads">
            <StackPanel>
                <ItemsControl ItemsSource="{Binding Unit.Quantity.OperatorOverloads}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type local:OperatorOverload}">
                            <TextBlock Text="{Binding}" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <TextBlock Text="{Binding Unit.Quantity.Inverse}" />
            </StackPanel>
        </GroupBox>
    </Grid>
</UserControl>
