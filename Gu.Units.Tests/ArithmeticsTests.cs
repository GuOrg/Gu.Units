namespace Gu.Units.Tests
{
    using System;
    using System.Threading.Tasks;
    using Microsoft.CodeAnalysis.CSharp.Scripting;
    using Microsoft.CodeAnalysis.Scripting;
    using NUnit.Framework;

    public static class ArithmeticsTests
    {
        [TestCase("return Mass.FromKilograms(1.2) * Speed.FromMetresPerSecond(3.4) == Momentum.FromNewtonSecond(4.08);")]
        [TestCase("return Mass.FromKilograms(1.2) * Frequency.FromHertz(3.4) == MassFlow.FromKilogramsPerSecond(4.08);")]
        [TestCase("return Mass.FromKilograms(1.2) * Acceleration.FromMetresPerSecondSquared(3.4) == Force.FromNewtons(4.08);")]
        [TestCase("return Mass.FromKilograms(1.2) * SpecificEnergy.FromJoulesPerKilogram(3.4) == Energy.FromJoules(4.08);")]
        [TestCase("return Mass.FromKilograms(1.2) * SpecificVolume.FromCubicMetresPerKilogram(3.4) == Volume.FromCubicMetres(4.08);")]
        [TestCase("return Length.FromMetres(1.2) * Length.FromMetres(3.4) == Area.FromSquareMetres(4.08);")]
        [TestCase("return Length.FromMetres(1.2) * Area.FromSquareMetres(3.4) == Volume.FromCubicMetres(4.08);")]
        [TestCase("return Length.FromMetres(1.2) * Force.FromNewtons(3.4) == Energy.FromJoules(4.08);")]
        [TestCase("return Length.FromMetres(1.2) * Pressure.FromPascals(3.4) == Stiffness.FromNewtonsPerMetre(4.08);")]
        [TestCase("return Length.FromMetres(1.2) * Density.FromKilogramsPerCubicMetre(3.4) == AreaDensity.FromKilogramsPerSquareMetre(4.08);")]
        [TestCase("return Length.FromMetres(1.2) * Speed.FromMetresPerSecond(3.4) == KinematicViscosity.FromSquareMetresPerSecond(4.08);")]
        [TestCase("return Length.FromMetres(1.2) * Frequency.FromHertz(3.4) == Speed.FromMetresPerSecond(4.08);")]
        [TestCase("return Length.FromMetres(1.2) * Acceleration.FromMetresPerSecondSquared(3.4) == SpecificEnergy.FromJoulesPerKilogram(4.08);")]
        [TestCase("return Length.FromMetres(1.2) * Stiffness.FromNewtonsPerMetre(3.4) == Force.FromNewtons(4.08);")]
        [TestCase("return Length.FromMetres(1.2) * MassFlow.FromKilogramsPerSecond(3.4) == Momentum.FromNewtonSecond(4.08);")]
        [TestCase("return Length.FromMetres(1.2) * KinematicViscosity.FromSquareMetresPerSecond(3.4) == VolumetricFlow.FromCubicMetresPerSecond(4.08);")]
        [TestCase("return Time.FromSeconds(1.2) * Current.FromAmperes(3.4) == ElectricCharge.FromCoulombs(4.08);")]
        [TestCase("return Time.FromSeconds(1.2) * Force.FromNewtons(3.4) == Momentum.FromNewtonSecond(4.08);")]
        [TestCase("return Time.FromSeconds(1.2) * Power.FromWatts(3.4) == Energy.FromJoules(4.08);")]
        [TestCase("return Time.FromSeconds(1.2) * Speed.FromMetresPerSecond(3.4) == Length.FromMetres(4.08);")]
        [TestCase("return Time.FromSeconds(1.2) * AngularSpeed.FromRadiansPerSecond(3.4) == Angle.FromRadians(4.08);")]
        [TestCase("return Time.FromSeconds(1.2) * Acceleration.FromMetresPerSecondSquared(3.4) == Speed.FromMetresPerSecond(4.08);")]
        [TestCase("return Time.FromSeconds(1.2) * Stiffness.FromNewtonsPerMetre(3.4) == MassFlow.FromKilogramsPerSecond(4.08);")]
        [TestCase("return Time.FromSeconds(1.2) * VolumetricFlow.FromCubicMetresPerSecond(3.4) == Volume.FromCubicMetres(4.08);")]
        [TestCase("return Time.FromSeconds(1.2) * Voltage.FromVolts(3.4) == MagneticFlux.FromWebers(4.08);")]
        [TestCase("return Time.FromSeconds(1.2) * Resistance.FromOhms(3.4) == Inductance.FromHenrys(4.08);")]
        [TestCase("return Time.FromSeconds(1.2) * SpecificEnergy.FromJoulesPerKilogram(3.4) == KinematicViscosity.FromSquareMetresPerSecond(4.08);")]
        [TestCase("return Time.FromSeconds(1.2) * AngularAcceleration.FromRadiansPerSecondSquared(3.4) == AngularSpeed.FromRadiansPerSecond(4.08);")]
        [TestCase("return Time.FromSeconds(1.2) * AngularJerk.FromRadiansPerSecondCubed(3.4) == AngularAcceleration.FromRadiansPerSecondSquared(4.08);")]
        [TestCase("return Time.FromSeconds(1.2) * Jerk.FromMetresPerSecondCubed(3.4) == Acceleration.FromMetresPerSecondSquared(4.08);")]
        [TestCase("return Time.FromSeconds(1.2) * ElectricalConductance.FromSiemens(3.4) == Capacitance.FromFarads(4.08);")]
        [TestCase("return Time.FromSeconds(1.2) * CatalyticActivity.FromKatals(3.4) == AmountOfSubstance.FromMoles(4.08);")]
        [TestCase("return Time.FromSeconds(1.2) * MassFlow.FromKilogramsPerSecond(3.4) == Mass.FromKilograms(4.08);")]
        [TestCase("return Time.FromSeconds(1.2) * KinematicViscosity.FromSquareMetresPerSecond(3.4) == Area.FromSquareMetres(4.08);")]
        [TestCase("return Angle.FromRadians(1.2) * Frequency.FromHertz(3.4) == AngularSpeed.FromRadiansPerSecond(4.08);")]
        [TestCase("return Angle.FromRadians(1.2) * Torque.FromNewtonMetres(3.4) == Energy.FromJoules(4.08);")]
        [TestCase("return Unitless.FromScalar(1.2) * LengthPerUnitless.FromMetresPerUnitless(3.4) == Length.FromMetres(4.08);")]
        [TestCase("return Unitless.FromScalar(1.2) * AnglePerUnitless.FromRadiansPerUnitless(3.4) == Angle.FromRadians(4.08);")]
        [TestCase("return Unitless.FromScalar(1.2) * ForcePerUnitless.FromNewtonsPerUnitless(3.4) == Force.FromNewtons(4.08);")]
        [TestCase("return Current.FromAmperes(1.2) * Time.FromSeconds(3.4) == ElectricCharge.FromCoulombs(4.08);")]
        [TestCase("return Current.FromAmperes(1.2) * Voltage.FromVolts(3.4) == Power.FromWatts(4.08);")]
        [TestCase("return Current.FromAmperes(1.2) * Resistance.FromOhms(3.4) == Voltage.FromVolts(4.08);")]
        [TestCase("return Current.FromAmperes(1.2) * Inductance.FromHenrys(3.4) == MagneticFlux.FromWebers(4.08);")]
        [TestCase("return Current.FromAmperes(1.2) * MagneticFlux.FromWebers(3.4) == Energy.FromJoules(4.08);")]
        [TestCase("return Current.FromAmperes(1.2) * MagneticFieldStrength.FromTeslas(3.4) == Stiffness.FromNewtonsPerMetre(4.08);")]
        [TestCase("return LuminousIntensity.FromCandelas(1.2) * SolidAngle.FromSteradians(3.4) == LuminousFlux.FromLumens(4.08);")]
        [TestCase("return AmountOfSubstance.FromMoles(1.2) * Frequency.FromHertz(3.4) == CatalyticActivity.FromKatals(4.08);")]
        [TestCase("return AmountOfSubstance.FromMoles(1.2) * MolarMass.FromKilogramsPerMole(3.4) == Mass.FromKilograms(4.08);")]
        [TestCase("return SolidAngle.FromSteradians(1.2) * LuminousIntensity.FromCandelas(3.4) == LuminousFlux.FromLumens(4.08);")]
        [TestCase("return Area.FromSquareMetres(1.2) * Length.FromMetres(3.4) == Volume.FromCubicMetres(4.08);")]
        [TestCase("return Area.FromSquareMetres(1.2) * Pressure.FromPascals(3.4) == Force.FromNewtons(4.08);")]
        [TestCase("return Area.FromSquareMetres(1.2) * Speed.FromMetresPerSecond(3.4) == VolumetricFlow.FromCubicMetresPerSecond(4.08);")]
        [TestCase("return Area.FromSquareMetres(1.2) * Frequency.FromHertz(3.4) == KinematicViscosity.FromSquareMetresPerSecond(4.08);")]
        [TestCase("return Area.FromSquareMetres(1.2) * Stiffness.FromNewtonsPerMetre(3.4) == Energy.FromJoules(4.08);")]
        [TestCase("return Area.FromSquareMetres(1.2) * Illuminance.FromLux(3.4) == LuminousFlux.FromLumens(4.08);")]
        [TestCase("return Area.FromSquareMetres(1.2) * MagneticFieldStrength.FromTeslas(3.4) == MagneticFlux.FromWebers(4.08);")]
        [TestCase("return Area.FromSquareMetres(1.2) * Wavenumber.FromReciprocalMetres(3.4) == Length.FromMetres(4.08);")]
        [TestCase("return Area.FromSquareMetres(1.2) * AreaDensity.FromKilogramsPerSquareMetre(3.4) == Mass.FromKilograms(4.08);")]
        [TestCase("return Volume.FromCubicMetres(1.2) * Pressure.FromPascals(3.4) == Energy.FromJoules(4.08);")]
        [TestCase("return Volume.FromCubicMetres(1.2) * Density.FromKilogramsPerCubicMetre(3.4) == Mass.FromKilograms(4.08);")]
        [TestCase("return Volume.FromCubicMetres(1.2) * Frequency.FromHertz(3.4) == VolumetricFlow.FromCubicMetresPerSecond(4.08);")]
        [TestCase("return Volume.FromCubicMetres(1.2) * Wavenumber.FromReciprocalMetres(3.4) == Area.FromSquareMetres(4.08);")]
        [TestCase("return Force.FromNewtons(1.2) * Length.FromMetres(3.4) == Energy.FromJoules(4.08);")]
        [TestCase("return Force.FromNewtons(1.2) * Time.FromSeconds(3.4) == Momentum.FromNewtonSecond(4.08);")]
        [TestCase("return Force.FromNewtons(1.2) * Speed.FromMetresPerSecond(3.4) == Power.FromWatts(4.08);")]
        [TestCase("return Force.FromNewtons(1.2) * Flexibility.FromMetresPerNewton(3.4) == Length.FromMetres(4.08);")]
        [TestCase("return Force.FromNewtons(1.2) * Wavenumber.FromReciprocalMetres(3.4) == Stiffness.FromNewtonsPerMetre(4.08);")]
        [TestCase("return Pressure.FromPascals(1.2) * Length.FromMetres(3.4) == Stiffness.FromNewtonsPerMetre(4.08);")]
        [TestCase("return Pressure.FromPascals(1.2) * Area.FromSquareMetres(3.4) == Force.FromNewtons(4.08);")]
        [TestCase("return Pressure.FromPascals(1.2) * Volume.FromCubicMetres(3.4) == Energy.FromJoules(4.08);")]
        [TestCase("return Pressure.FromPascals(1.2) * VolumetricFlow.FromCubicMetresPerSecond(3.4) == Power.FromWatts(4.08);")]
        [TestCase("return Pressure.FromPascals(1.2) * Flexibility.FromMetresPerNewton(3.4) == Wavenumber.FromReciprocalMetres(4.08);")]
        [TestCase("return Pressure.FromPascals(1.2) * SpecificVolume.FromCubicMetresPerKilogram(3.4) == SpecificEnergy.FromJoulesPerKilogram(4.08);")]
        [TestCase("return Density.FromKilogramsPerCubicMetre(1.2) * Length.FromMetres(3.4) == AreaDensity.FromKilogramsPerSquareMetre(4.08);")]
        [TestCase("return Density.FromKilogramsPerCubicMetre(1.2) * Volume.FromCubicMetres(3.4) == Mass.FromKilograms(4.08);")]
        [TestCase("return Density.FromKilogramsPerCubicMetre(1.2) * VolumetricFlow.FromCubicMetresPerSecond(3.4) == MassFlow.FromKilogramsPerSecond(4.08);")]
        [TestCase("return Density.FromKilogramsPerCubicMetre(1.2) * SpecificEnergy.FromJoulesPerKilogram(3.4) == Pressure.FromPascals(4.08);")]
        [TestCase("return Energy.FromJoules(1.2) * Frequency.FromHertz(3.4) == Power.FromWatts(4.08);")]
        [TestCase("return Energy.FromJoules(1.2) * Flexibility.FromMetresPerNewton(3.4) == Area.FromSquareMetres(4.08);")]
        [TestCase("return Energy.FromJoules(1.2) * Wavenumber.FromReciprocalMetres(3.4) == Force.FromNewtons(4.08);")]
        [TestCase("return Power.FromWatts(1.2) * Time.FromSeconds(3.4) == Energy.FromJoules(4.08);")]
        [TestCase("return Power.FromWatts(1.2) * Flexibility.FromMetresPerNewton(3.4) == KinematicViscosity.FromSquareMetresPerSecond(4.08);")]
        [TestCase("return Speed.FromMetresPerSecond(1.2) * Mass.FromKilograms(3.4) == Momentum.FromNewtonSecond(4.08);")]
        [TestCase("return Speed.FromMetresPerSecond(1.2) * Length.FromMetres(3.4) == KinematicViscosity.FromSquareMetresPerSecond(4.08);")]
        [TestCase("return Speed.FromMetresPerSecond(1.2) * Time.FromSeconds(3.4) == Length.FromMetres(4.08);")]
        [TestCase("return Speed.FromMetresPerSecond(1.2) * Area.FromSquareMetres(3.4) == VolumetricFlow.FromCubicMetresPerSecond(4.08);")]
        [TestCase("return Speed.FromMetresPerSecond(1.2) * Force.FromNewtons(3.4) == Power.FromWatts(4.08);")]
        [TestCase("return Speed.FromMetresPerSecond(1.2) * Speed.FromMetresPerSecond(3.4) == SpecificEnergy.FromJoulesPerKilogram(4.08);")]
        [TestCase("return Speed.FromMetresPerSecond(1.2) * Frequency.FromHertz(3.4) == Acceleration.FromMetresPerSecondSquared(4.08);")]
        [TestCase("return Speed.FromMetresPerSecond(1.2) * Momentum.FromNewtonSecond(3.4) == Energy.FromJoules(4.08);")]
        [TestCase("return Speed.FromMetresPerSecond(1.2) * Wavenumber.FromReciprocalMetres(3.4) == Frequency.FromHertz(4.08);")]
        [TestCase("return Speed.FromMetresPerSecond(1.2) * MassFlow.FromKilogramsPerSecond(3.4) == Force.FromNewtons(4.08);")]
        [TestCase("return AngularSpeed.FromRadiansPerSecond(1.2) * Time.FromSeconds(3.4) == Angle.FromRadians(4.08);")]
        [TestCase("return AngularSpeed.FromRadiansPerSecond(1.2) * Frequency.FromHertz(3.4) == AngularAcceleration.FromRadiansPerSecondSquared(4.08);")]
        [TestCase("return AngularSpeed.FromRadiansPerSecond(1.2) * Torque.FromNewtonMetres(3.4) == Power.FromWatts(4.08);")]
        [TestCase("return Frequency.FromHertz(1.2) * Mass.FromKilograms(3.4) == MassFlow.FromKilogramsPerSecond(4.08);")]
        [TestCase("return Frequency.FromHertz(1.2) * Length.FromMetres(3.4) == Speed.FromMetresPerSecond(4.08);")]
        [TestCase("return Frequency.FromHertz(1.2) * Angle.FromRadians(3.4) == AngularSpeed.FromRadiansPerSecond(4.08);")]
        [TestCase("return Frequency.FromHertz(1.2) * AmountOfSubstance.FromMoles(3.4) == CatalyticActivity.FromKatals(4.08);")]
        [TestCase("return Frequency.FromHertz(1.2) * Area.FromSquareMetres(3.4) == KinematicViscosity.FromSquareMetresPerSecond(4.08);")]
        [TestCase("return Frequency.FromHertz(1.2) * Volume.FromCubicMetres(3.4) == VolumetricFlow.FromCubicMetresPerSecond(4.08);")]
        [TestCase("return Frequency.FromHertz(1.2) * Energy.FromJoules(3.4) == Power.FromWatts(4.08);")]
        [TestCase("return Frequency.FromHertz(1.2) * Speed.FromMetresPerSecond(3.4) == Acceleration.FromMetresPerSecondSquared(4.08);")]
        [TestCase("return Frequency.FromHertz(1.2) * AngularSpeed.FromRadiansPerSecond(3.4) == AngularAcceleration.FromRadiansPerSecondSquared(4.08);")]
        [TestCase("return Frequency.FromHertz(1.2) * Acceleration.FromMetresPerSecondSquared(3.4) == Jerk.FromMetresPerSecondCubed(4.08);")]
        [TestCase("return Frequency.FromHertz(1.2) * ElectricCharge.FromCoulombs(3.4) == Current.FromAmperes(4.08);")]
        [TestCase("return Frequency.FromHertz(1.2) * Inductance.FromHenrys(3.4) == Resistance.FromOhms(4.08);")]
        [TestCase("return Frequency.FromHertz(1.2) * Capacitance.FromFarads(3.4) == ElectricalConductance.FromSiemens(4.08);")]
        [TestCase("return Frequency.FromHertz(1.2) * AngularAcceleration.FromRadiansPerSecondSquared(3.4) == AngularJerk.FromRadiansPerSecondCubed(4.08);")]
        [TestCase("return Frequency.FromHertz(1.2) * MagneticFlux.FromWebers(3.4) == Voltage.FromVolts(4.08);")]
        [TestCase("return Frequency.FromHertz(1.2) * Momentum.FromNewtonSecond(3.4) == Force.FromNewtons(4.08);")]
        [TestCase("return Frequency.FromHertz(1.2) * MassFlow.FromKilogramsPerSecond(3.4) == Stiffness.FromNewtonsPerMetre(4.08);")]
        [TestCase("return Frequency.FromHertz(1.2) * KinematicViscosity.FromSquareMetresPerSecond(3.4) == SpecificEnergy.FromJoulesPerKilogram(4.08);")]
        [TestCase("return Acceleration.FromMetresPerSecondSquared(1.2) * Mass.FromKilograms(3.4) == Force.FromNewtons(4.08);")]
        [TestCase("return Acceleration.FromMetresPerSecondSquared(1.2) * Length.FromMetres(3.4) == SpecificEnergy.FromJoulesPerKilogram(4.08);")]
        [TestCase("return Acceleration.FromMetresPerSecondSquared(1.2) * Time.FromSeconds(3.4) == Speed.FromMetresPerSecond(4.08);")]
        [TestCase("return Acceleration.FromMetresPerSecondSquared(1.2) * Frequency.FromHertz(3.4) == Jerk.FromMetresPerSecondCubed(4.08);")]
        [TestCase("return Acceleration.FromMetresPerSecondSquared(1.2) * Momentum.FromNewtonSecond(3.4) == Power.FromWatts(4.08);")]
        [TestCase("return Acceleration.FromMetresPerSecondSquared(1.2) * AreaDensity.FromKilogramsPerSquareMetre(3.4) == Pressure.FromPascals(4.08);")]
        [TestCase("return Torque.FromNewtonMetres(1.2) * Angle.FromRadians(3.4) == Energy.FromJoules(4.08);")]
        [TestCase("return Torque.FromNewtonMetres(1.2) * AngularSpeed.FromRadiansPerSecond(3.4) == Power.FromWatts(4.08);")]
        [TestCase("return Stiffness.FromNewtonsPerMetre(1.2) * Length.FromMetres(3.4) == Force.FromNewtons(4.08);")]
        [TestCase("return Stiffness.FromNewtonsPerMetre(1.2) * Time.FromSeconds(3.4) == MassFlow.FromKilogramsPerSecond(4.08);")]
        [TestCase("return Stiffness.FromNewtonsPerMetre(1.2) * Area.FromSquareMetres(3.4) == Energy.FromJoules(4.08);")]
        [TestCase("return Stiffness.FromNewtonsPerMetre(1.2) * LengthPerUnitless.FromMetresPerUnitless(3.4) == ForcePerUnitless.FromNewtonsPerUnitless(4.08);")]
        [TestCase("return Stiffness.FromNewtonsPerMetre(1.2) * Wavenumber.FromReciprocalMetres(3.4) == Pressure.FromPascals(4.08);")]
        [TestCase("return Stiffness.FromNewtonsPerMetre(1.2) * KinematicViscosity.FromSquareMetresPerSecond(3.4) == Power.FromWatts(4.08);")]
        [TestCase("return VolumetricFlow.FromCubicMetresPerSecond(1.2) * Time.FromSeconds(3.4) == Volume.FromCubicMetres(4.08);")]
        [TestCase("return VolumetricFlow.FromCubicMetresPerSecond(1.2) * Pressure.FromPascals(3.4) == Power.FromWatts(4.08);")]
        [TestCase("return VolumetricFlow.FromCubicMetresPerSecond(1.2) * Density.FromKilogramsPerCubicMetre(3.4) == MassFlow.FromKilogramsPerSecond(4.08);")]
        [TestCase("return VolumetricFlow.FromCubicMetresPerSecond(1.2) * Wavenumber.FromReciprocalMetres(3.4) == KinematicViscosity.FromSquareMetresPerSecond(4.08);")]
        [TestCase("return VolumetricFlow.FromCubicMetresPerSecond(1.2) * AreaDensity.FromKilogramsPerSquareMetre(3.4) == Momentum.FromNewtonSecond(4.08);")]
        [TestCase("return Voltage.FromVolts(1.2) * Time.FromSeconds(3.4) == MagneticFlux.FromWebers(4.08);")]
        [TestCase("return Voltage.FromVolts(1.2) * Current.FromAmperes(3.4) == Power.FromWatts(4.08);")]
        [TestCase("return Voltage.FromVolts(1.2) * ElectricCharge.FromCoulombs(3.4) == Energy.FromJoules(4.08);")]
        [TestCase("return Voltage.FromVolts(1.2) * Capacitance.FromFarads(3.4) == ElectricCharge.FromCoulombs(4.08);")]
        [TestCase("return Voltage.FromVolts(1.2) * ElectricalConductance.FromSiemens(3.4) == Current.FromAmperes(4.08);")]
        [TestCase("return Resistance.FromOhms(1.2) * Time.FromSeconds(3.4) == Inductance.FromHenrys(4.08);")]
        [TestCase("return Resistance.FromOhms(1.2) * Current.FromAmperes(3.4) == Voltage.FromVolts(4.08);")]
        [TestCase("return Resistance.FromOhms(1.2) * ElectricCharge.FromCoulombs(3.4) == MagneticFlux.FromWebers(4.08);")]
        [TestCase("return Resistance.FromOhms(1.2) * Capacitance.FromFarads(3.4) == Time.FromSeconds(4.08);")]
        [TestCase("return SpecificEnergy.FromJoulesPerKilogram(1.2) * Mass.FromKilograms(3.4) == Energy.FromJoules(4.08);")]
        [TestCase("return SpecificEnergy.FromJoulesPerKilogram(1.2) * Time.FromSeconds(3.4) == KinematicViscosity.FromSquareMetresPerSecond(4.08);")]
        [TestCase("return SpecificEnergy.FromJoulesPerKilogram(1.2) * Density.FromKilogramsPerCubicMetre(3.4) == Pressure.FromPascals(4.08);")]
        [TestCase("return SpecificEnergy.FromJoulesPerKilogram(1.2) * Wavenumber.FromReciprocalMetres(3.4) == Acceleration.FromMetresPerSecondSquared(4.08);")]
        [TestCase("return SpecificEnergy.FromJoulesPerKilogram(1.2) * AreaDensity.FromKilogramsPerSquareMetre(3.4) == Stiffness.FromNewtonsPerMetre(4.08);")]
        [TestCase("return SpecificEnergy.FromJoulesPerKilogram(1.2) * MassFlow.FromKilogramsPerSecond(3.4) == Power.FromWatts(4.08);")]
        [TestCase("return ElectricCharge.FromCoulombs(1.2) * Frequency.FromHertz(3.4) == Current.FromAmperes(4.08);")]
        [TestCase("return ElectricCharge.FromCoulombs(1.2) * Voltage.FromVolts(3.4) == Energy.FromJoules(4.08);")]
        [TestCase("return ElectricCharge.FromCoulombs(1.2) * Resistance.FromOhms(3.4) == MagneticFlux.FromWebers(4.08);")]
        [TestCase("return ElectricCharge.FromCoulombs(1.2) * MagneticFieldStrength.FromTeslas(3.4) == MassFlow.FromKilogramsPerSecond(4.08);")]
        [TestCase("return Inductance.FromHenrys(1.2) * Current.FromAmperes(3.4) == MagneticFlux.FromWebers(4.08);")]
        [TestCase("return Inductance.FromHenrys(1.2) * Frequency.FromHertz(3.4) == Resistance.FromOhms(4.08);")]
        [TestCase("return Inductance.FromHenrys(1.2) * ElectricalConductance.FromSiemens(3.4) == Time.FromSeconds(4.08);")]
        [TestCase("return Capacitance.FromFarads(1.2) * Frequency.FromHertz(3.4) == ElectricalConductance.FromSiemens(4.08);")]
        [TestCase("return Capacitance.FromFarads(1.2) * Voltage.FromVolts(3.4) == ElectricCharge.FromCoulombs(4.08);")]
        [TestCase("return Capacitance.FromFarads(1.2) * Resistance.FromOhms(3.4) == Time.FromSeconds(4.08);")]
        [TestCase("return Flexibility.FromMetresPerNewton(1.2) * Force.FromNewtons(3.4) == Length.FromMetres(4.08);")]
        [TestCase("return Flexibility.FromMetresPerNewton(1.2) * Pressure.FromPascals(3.4) == Wavenumber.FromReciprocalMetres(4.08);")]
        [TestCase("return Flexibility.FromMetresPerNewton(1.2) * Energy.FromJoules(3.4) == Area.FromSquareMetres(4.08);")]
        [TestCase("return Flexibility.FromMetresPerNewton(1.2) * Power.FromWatts(3.4) == KinematicViscosity.FromSquareMetresPerSecond(4.08);")]
        [TestCase("return Flexibility.FromMetresPerNewton(1.2) * ForcePerUnitless.FromNewtonsPerUnitless(3.4) == LengthPerUnitless.FromMetresPerUnitless(4.08);")]
        [TestCase("return Flexibility.FromMetresPerNewton(1.2) * MassFlow.FromKilogramsPerSecond(3.4) == Time.FromSeconds(4.08);")]
        [TestCase("return AngularAcceleration.FromRadiansPerSecondSquared(1.2) * Time.FromSeconds(3.4) == AngularSpeed.FromRadiansPerSecond(4.08);")]
        [TestCase("return AngularAcceleration.FromRadiansPerSecondSquared(1.2) * Frequency.FromHertz(3.4) == AngularJerk.FromRadiansPerSecondCubed(4.08);")]
        [TestCase("return AngularJerk.FromRadiansPerSecondCubed(1.2) * Time.FromSeconds(3.4) == AngularAcceleration.FromRadiansPerSecondSquared(4.08);")]
        [TestCase("return Jerk.FromMetresPerSecondCubed(1.2) * Time.FromSeconds(3.4) == Acceleration.FromMetresPerSecondSquared(4.08);")]
        [TestCase("return LengthPerUnitless.FromMetresPerUnitless(1.2) * Unitless.FromScalar(3.4) == Length.FromMetres(4.08);")]
        [TestCase("return LengthPerUnitless.FromMetresPerUnitless(1.2) * Stiffness.FromNewtonsPerMetre(3.4) == ForcePerUnitless.FromNewtonsPerUnitless(4.08);")]
        [TestCase("return AnglePerUnitless.FromRadiansPerUnitless(1.2) * Unitless.FromScalar(3.4) == Angle.FromRadians(4.08);")]
        [TestCase("return ForcePerUnitless.FromNewtonsPerUnitless(1.2) * Unitless.FromScalar(3.4) == Force.FromNewtons(4.08);")]
        [TestCase("return ForcePerUnitless.FromNewtonsPerUnitless(1.2) * Flexibility.FromMetresPerNewton(3.4) == LengthPerUnitless.FromMetresPerUnitless(4.08);")]
        [TestCase("return Illuminance.FromLux(1.2) * Area.FromSquareMetres(3.4) == LuminousFlux.FromLumens(4.08);")]
        [TestCase("return MagneticFlux.FromWebers(1.2) * Current.FromAmperes(3.4) == Energy.FromJoules(4.08);")]
        [TestCase("return MagneticFlux.FromWebers(1.2) * Frequency.FromHertz(3.4) == Voltage.FromVolts(4.08);")]
        [TestCase("return MagneticFlux.FromWebers(1.2) * ElectricalConductance.FromSiemens(3.4) == ElectricCharge.FromCoulombs(4.08);")]
        [TestCase("return ElectricalConductance.FromSiemens(1.2) * Time.FromSeconds(3.4) == Capacitance.FromFarads(4.08);")]
        [TestCase("return ElectricalConductance.FromSiemens(1.2) * Voltage.FromVolts(3.4) == Current.FromAmperes(4.08);")]
        [TestCase("return ElectricalConductance.FromSiemens(1.2) * Inductance.FromHenrys(3.4) == Time.FromSeconds(4.08);")]
        [TestCase("return ElectricalConductance.FromSiemens(1.2) * MagneticFlux.FromWebers(3.4) == ElectricCharge.FromCoulombs(4.08);")]
        [TestCase("return MagneticFieldStrength.FromTeslas(1.2) * Current.FromAmperes(3.4) == Stiffness.FromNewtonsPerMetre(4.08);")]
        [TestCase("return MagneticFieldStrength.FromTeslas(1.2) * Area.FromSquareMetres(3.4) == MagneticFlux.FromWebers(4.08);")]
        [TestCase("return MagneticFieldStrength.FromTeslas(1.2) * ElectricCharge.FromCoulombs(3.4) == MassFlow.FromKilogramsPerSecond(4.08);")]
        [TestCase("return MagneticFieldStrength.FromTeslas(1.2) * KinematicViscosity.FromSquareMetresPerSecond(3.4) == Voltage.FromVolts(4.08);")]
        [TestCase("return CatalyticActivity.FromKatals(1.2) * Time.FromSeconds(3.4) == AmountOfSubstance.FromMoles(4.08);")]
        [TestCase("return CatalyticActivity.FromKatals(1.2) * MolarMass.FromKilogramsPerMole(3.4) == MassFlow.FromKilogramsPerSecond(4.08);")]
        [TestCase("return Momentum.FromNewtonSecond(1.2) * Speed.FromMetresPerSecond(3.4) == Energy.FromJoules(4.08);")]
        [TestCase("return Momentum.FromNewtonSecond(1.2) * Frequency.FromHertz(3.4) == Force.FromNewtons(4.08);")]
        [TestCase("return Momentum.FromNewtonSecond(1.2) * Acceleration.FromMetresPerSecondSquared(3.4) == Power.FromWatts(4.08);")]
        [TestCase("return Momentum.FromNewtonSecond(1.2) * Wavenumber.FromReciprocalMetres(3.4) == MassFlow.FromKilogramsPerSecond(4.08);")]
        [TestCase("return Wavenumber.FromReciprocalMetres(1.2) * Area.FromSquareMetres(3.4) == Length.FromMetres(4.08);")]
        [TestCase("return Wavenumber.FromReciprocalMetres(1.2) * Volume.FromCubicMetres(3.4) == Area.FromSquareMetres(4.08);")]
        [TestCase("return Wavenumber.FromReciprocalMetres(1.2) * Force.FromNewtons(3.4) == Stiffness.FromNewtonsPerMetre(4.08);")]
        [TestCase("return Wavenumber.FromReciprocalMetres(1.2) * Energy.FromJoules(3.4) == Force.FromNewtons(4.08);")]
        [TestCase("return Wavenumber.FromReciprocalMetres(1.2) * Speed.FromMetresPerSecond(3.4) == Frequency.FromHertz(4.08);")]
        [TestCase("return Wavenumber.FromReciprocalMetres(1.2) * Stiffness.FromNewtonsPerMetre(3.4) == Pressure.FromPascals(4.08);")]
        [TestCase("return Wavenumber.FromReciprocalMetres(1.2) * VolumetricFlow.FromCubicMetresPerSecond(3.4) == KinematicViscosity.FromSquareMetresPerSecond(4.08);")]
        [TestCase("return Wavenumber.FromReciprocalMetres(1.2) * SpecificEnergy.FromJoulesPerKilogram(3.4) == Acceleration.FromMetresPerSecondSquared(4.08);")]
        [TestCase("return Wavenumber.FromReciprocalMetres(1.2) * Momentum.FromNewtonSecond(3.4) == MassFlow.FromKilogramsPerSecond(4.08);")]
        [TestCase("return Wavenumber.FromReciprocalMetres(1.2) * AreaDensity.FromKilogramsPerSquareMetre(3.4) == Density.FromKilogramsPerCubicMetre(4.08);")]
        [TestCase("return Wavenumber.FromReciprocalMetres(1.2) * KinematicViscosity.FromSquareMetresPerSecond(3.4) == Speed.FromMetresPerSecond(4.08);")]
        [TestCase("return AreaDensity.FromKilogramsPerSquareMetre(1.2) * Area.FromSquareMetres(3.4) == Mass.FromKilograms(4.08);")]
        [TestCase("return AreaDensity.FromKilogramsPerSquareMetre(1.2) * Acceleration.FromMetresPerSecondSquared(3.4) == Pressure.FromPascals(4.08);")]
        [TestCase("return AreaDensity.FromKilogramsPerSquareMetre(1.2) * VolumetricFlow.FromCubicMetresPerSecond(3.4) == Momentum.FromNewtonSecond(4.08);")]
        [TestCase("return AreaDensity.FromKilogramsPerSquareMetre(1.2) * SpecificEnergy.FromJoulesPerKilogram(3.4) == Stiffness.FromNewtonsPerMetre(4.08);")]
        [TestCase("return AreaDensity.FromKilogramsPerSquareMetre(1.2) * Wavenumber.FromReciprocalMetres(3.4) == Density.FromKilogramsPerCubicMetre(4.08);")]
        [TestCase("return AreaDensity.FromKilogramsPerSquareMetre(1.2) * SpecificVolume.FromCubicMetresPerKilogram(3.4) == Length.FromMetres(4.08);")]
        [TestCase("return AreaDensity.FromKilogramsPerSquareMetre(1.2) * KinematicViscosity.FromSquareMetresPerSecond(3.4) == MassFlow.FromKilogramsPerSecond(4.08);")]
        [TestCase("return SpecificVolume.FromCubicMetresPerKilogram(1.2) * Mass.FromKilograms(3.4) == Volume.FromCubicMetres(4.08);")]
        [TestCase("return SpecificVolume.FromCubicMetresPerKilogram(1.2) * Pressure.FromPascals(3.4) == SpecificEnergy.FromJoulesPerKilogram(4.08);")]
        [TestCase("return SpecificVolume.FromCubicMetresPerKilogram(1.2) * AreaDensity.FromKilogramsPerSquareMetre(3.4) == Length.FromMetres(4.08);")]
        [TestCase("return SpecificVolume.FromCubicMetresPerKilogram(1.2) * MassFlow.FromKilogramsPerSecond(3.4) == VolumetricFlow.FromCubicMetresPerSecond(4.08);")]
        [TestCase("return MassFlow.FromKilogramsPerSecond(1.2) * Length.FromMetres(3.4) == Momentum.FromNewtonSecond(4.08);")]
        [TestCase("return MassFlow.FromKilogramsPerSecond(1.2) * Time.FromSeconds(3.4) == Mass.FromKilograms(4.08);")]
        [TestCase("return MassFlow.FromKilogramsPerSecond(1.2) * Speed.FromMetresPerSecond(3.4) == Force.FromNewtons(4.08);")]
        [TestCase("return MassFlow.FromKilogramsPerSecond(1.2) * Frequency.FromHertz(3.4) == Stiffness.FromNewtonsPerMetre(4.08);")]
        [TestCase("return MassFlow.FromKilogramsPerSecond(1.2) * SpecificEnergy.FromJoulesPerKilogram(3.4) == Power.FromWatts(4.08);")]
        [TestCase("return MassFlow.FromKilogramsPerSecond(1.2) * Flexibility.FromMetresPerNewton(3.4) == Time.FromSeconds(4.08);")]
        [TestCase("return MassFlow.FromKilogramsPerSecond(1.2) * SpecificVolume.FromCubicMetresPerKilogram(3.4) == VolumetricFlow.FromCubicMetresPerSecond(4.08);")]
        [TestCase("return MassFlow.FromKilogramsPerSecond(1.2) * KinematicViscosity.FromSquareMetresPerSecond(3.4) == Energy.FromJoules(4.08);")]
        [TestCase("return KinematicViscosity.FromSquareMetresPerSecond(1.2) * Length.FromMetres(3.4) == VolumetricFlow.FromCubicMetresPerSecond(4.08);")]
        [TestCase("return KinematicViscosity.FromSquareMetresPerSecond(1.2) * Time.FromSeconds(3.4) == Area.FromSquareMetres(4.08);")]
        [TestCase("return KinematicViscosity.FromSquareMetresPerSecond(1.2) * Frequency.FromHertz(3.4) == SpecificEnergy.FromJoulesPerKilogram(4.08);")]
        [TestCase("return KinematicViscosity.FromSquareMetresPerSecond(1.2) * Stiffness.FromNewtonsPerMetre(3.4) == Power.FromWatts(4.08);")]
        [TestCase("return KinematicViscosity.FromSquareMetresPerSecond(1.2) * MagneticFieldStrength.FromTeslas(3.4) == Voltage.FromVolts(4.08);")]
        [TestCase("return KinematicViscosity.FromSquareMetresPerSecond(1.2) * Wavenumber.FromReciprocalMetres(3.4) == Speed.FromMetresPerSecond(4.08);")]
        [TestCase("return KinematicViscosity.FromSquareMetresPerSecond(1.2) * AreaDensity.FromKilogramsPerSquareMetre(3.4) == MassFlow.FromKilogramsPerSecond(4.08);")]
        [TestCase("return KinematicViscosity.FromSquareMetresPerSecond(1.2) * MassFlow.FromKilogramsPerSecond(3.4) == Energy.FromJoules(4.08);")]
        [TestCase("return MolarMass.FromKilogramsPerMole(1.2) * AmountOfSubstance.FromMoles(3.4) == Mass.FromKilograms(4.08);")]
        [TestCase("return MolarMass.FromKilogramsPerMole(1.2) * CatalyticActivity.FromKatals(3.4) == MassFlow.FromKilogramsPerSecond(4.08);")]
        public static async Task Multiply(string expression)
        {
            var scriptOptions = ScriptOptions.Default.WithReferences(typeof(Length).Assembly)
                .WithImports("Gu.Units");
            var result = await CSharpScript.EvaluateAsync<bool>(expression, scriptOptions);
            Assert.AreEqual(true, result);
        }

        [TestCase("return Mass.FromKilograms(1.2) / Time.FromSeconds(3.4) == MassFlow.FromKilogramsPerSecond(0.35294117647058826);")]
        [TestCase("return Mass.FromKilograms(1.2) / AmountOfSubstance.FromMoles(3.4) == MolarMass.FromKilogramsPerMole(0.35294117647058826);")]
        [TestCase("return Mass.FromKilograms(1.2) / Area.FromSquareMetres(3.4) == AreaDensity.FromKilogramsPerSquareMetre(0.35294117647058826);")]
        [TestCase("return Mass.FromKilograms(1.2) / Volume.FromCubicMetres(3.4) == Density.FromKilogramsPerCubicMetre(0.35294117647058826);")]
        [TestCase("return Mass.FromKilograms(1.2) / Density.FromKilogramsPerCubicMetre(3.4) == Volume.FromCubicMetres(0.35294117647058826);")]
        [TestCase("return Mass.FromKilograms(1.2) / AreaDensity.FromKilogramsPerSquareMetre(3.4) == Area.FromSquareMetres(0.35294117647058826);")]
        [TestCase("return Mass.FromKilograms(1.2) / MassFlow.FromKilogramsPerSecond(3.4) == Time.FromSeconds(0.35294117647058826);")]
        [TestCase("return Mass.FromKilograms(1.2) / MolarMass.FromKilogramsPerMole(3.4) == AmountOfSubstance.FromMoles(0.35294117647058826);")]
        [TestCase("return Length.FromMetres(1.2) / Time.FromSeconds(3.4) == Speed.FromMetresPerSecond(0.35294117647058826);")]
        [TestCase("return Length.FromMetres(1.2) / Unitless.FromScalar(3.4) == LengthPerUnitless.FromMetresPerUnitless(0.35294117647058826);")]
        [TestCase("return Length.FromMetres(1.2) / Area.FromSquareMetres(3.4) == Wavenumber.FromReciprocalMetres(0.35294117647058826);")]
        [TestCase("return Length.FromMetres(1.2) / Force.FromNewtons(3.4) == Flexibility.FromMetresPerNewton(0.35294117647058826);")]
        [TestCase("return Length.FromMetres(1.2) / Speed.FromMetresPerSecond(3.4) == Time.FromSeconds(0.35294117647058826);")]
        [TestCase("return Length.FromMetres(1.2) / Flexibility.FromMetresPerNewton(3.4) == Force.FromNewtons(0.35294117647058826);")]
        [TestCase("return Length.FromMetres(1.2) / LengthPerUnitless.FromMetresPerUnitless(3.4) == Unitless.FromScalar(0.35294117647058826);")]
        [TestCase("return Length.FromMetres(1.2) / AreaDensity.FromKilogramsPerSquareMetre(3.4) == SpecificVolume.FromCubicMetresPerKilogram(0.35294117647058826);")]
        [TestCase("return Length.FromMetres(1.2) / SpecificVolume.FromCubicMetresPerKilogram(3.4) == AreaDensity.FromKilogramsPerSquareMetre(0.35294117647058826);")]
        [TestCase("return Time.FromSeconds(1.2) / Resistance.FromOhms(3.4) == Capacitance.FromFarads(0.35294117647058826);")]
        [TestCase("return Time.FromSeconds(1.2) / Inductance.FromHenrys(3.4) == ElectricalConductance.FromSiemens(0.35294117647058826);")]
        [TestCase("return Time.FromSeconds(1.2) / Capacitance.FromFarads(3.4) == Resistance.FromOhms(0.35294117647058826);")]
        [TestCase("return Time.FromSeconds(1.2) / Flexibility.FromMetresPerNewton(3.4) == MassFlow.FromKilogramsPerSecond(0.35294117647058826);")]
        [TestCase("return Time.FromSeconds(1.2) / ElectricalConductance.FromSiemens(3.4) == Inductance.FromHenrys(0.35294117647058826);")]
        [TestCase("return Time.FromSeconds(1.2) / MassFlow.FromKilogramsPerSecond(3.4) == Flexibility.FromMetresPerNewton(0.35294117647058826);")]
        [TestCase("return Angle.FromRadians(1.2) / Time.FromSeconds(3.4) == AngularSpeed.FromRadiansPerSecond(0.35294117647058826);")]
        [TestCase("return Angle.FromRadians(1.2) / Unitless.FromScalar(3.4) == AnglePerUnitless.FromRadiansPerUnitless(0.35294117647058826);")]
        [TestCase("return Angle.FromRadians(1.2) / AngularSpeed.FromRadiansPerSecond(3.4) == Time.FromSeconds(0.35294117647058826);")]
        [TestCase("return Angle.FromRadians(1.2) / AnglePerUnitless.FromRadiansPerUnitless(3.4) == Unitless.FromScalar(0.35294117647058826);")]
        [TestCase("return Current.FromAmperes(1.2) / Frequency.FromHertz(3.4) == ElectricCharge.FromCoulombs(0.35294117647058826);")]
        [TestCase("return Current.FromAmperes(1.2) / Voltage.FromVolts(3.4) == ElectricalConductance.FromSiemens(0.35294117647058826);")]
        [TestCase("return Current.FromAmperes(1.2) / ElectricCharge.FromCoulombs(3.4) == Frequency.FromHertz(0.35294117647058826);")]
        [TestCase("return Current.FromAmperes(1.2) / ElectricalConductance.FromSiemens(3.4) == Voltage.FromVolts(0.35294117647058826);")]
        [TestCase("return AmountOfSubstance.FromMoles(1.2) / Time.FromSeconds(3.4) == CatalyticActivity.FromKatals(0.35294117647058826);")]
        [TestCase("return AmountOfSubstance.FromMoles(1.2) / CatalyticActivity.FromKatals(3.4) == Time.FromSeconds(0.35294117647058826);")]
        [TestCase("return Area.FromSquareMetres(1.2) / Length.FromMetres(3.4) == Length.FromMetres(0.35294117647058826);")]
        [TestCase("return Area.FromSquareMetres(1.2) / Time.FromSeconds(3.4) == KinematicViscosity.FromSquareMetresPerSecond(0.35294117647058826);")]
        [TestCase("return Area.FromSquareMetres(1.2) / Volume.FromCubicMetres(3.4) == Wavenumber.FromReciprocalMetres(0.35294117647058826);")]
        [TestCase("return Area.FromSquareMetres(1.2) / Energy.FromJoules(3.4) == Flexibility.FromMetresPerNewton(0.35294117647058826);")]
        [TestCase("return Area.FromSquareMetres(1.2) / Flexibility.FromMetresPerNewton(3.4) == Energy.FromJoules(0.35294117647058826);")]
        [TestCase("return Area.FromSquareMetres(1.2) / Wavenumber.FromReciprocalMetres(3.4) == Volume.FromCubicMetres(0.35294117647058826);")]
        [TestCase("return Area.FromSquareMetres(1.2) / KinematicViscosity.FromSquareMetresPerSecond(3.4) == Time.FromSeconds(0.35294117647058826);")]
        [TestCase("return Volume.FromCubicMetres(1.2) / Mass.FromKilograms(3.4) == SpecificVolume.FromCubicMetresPerKilogram(0.35294117647058826);")]
        [TestCase("return Volume.FromCubicMetres(1.2) / Length.FromMetres(3.4) == Area.FromSquareMetres(0.35294117647058826);")]
        [TestCase("return Volume.FromCubicMetres(1.2) / Time.FromSeconds(3.4) == VolumetricFlow.FromCubicMetresPerSecond(0.35294117647058826);")]
        [TestCase("return Volume.FromCubicMetres(1.2) / Area.FromSquareMetres(3.4) == Length.FromMetres(0.35294117647058826);")]
        [TestCase("return Volume.FromCubicMetres(1.2) / VolumetricFlow.FromCubicMetresPerSecond(3.4) == Time.FromSeconds(0.35294117647058826);")]
        [TestCase("return Volume.FromCubicMetres(1.2) / SpecificVolume.FromCubicMetresPerKilogram(3.4) == Mass.FromKilograms(0.35294117647058826);")]
        [TestCase("return Force.FromNewtons(1.2) / Mass.FromKilograms(3.4) == Acceleration.FromMetresPerSecondSquared(0.35294117647058826);")]
        [TestCase("return Force.FromNewtons(1.2) / Length.FromMetres(3.4) == Stiffness.FromNewtonsPerMetre(0.35294117647058826);")]
        [TestCase("return Force.FromNewtons(1.2) / Unitless.FromScalar(3.4) == ForcePerUnitless.FromNewtonsPerUnitless(0.35294117647058826);")]
        [TestCase("return Force.FromNewtons(1.2) / Area.FromSquareMetres(3.4) == Pressure.FromPascals(0.35294117647058826);")]
        [TestCase("return Force.FromNewtons(1.2) / Pressure.FromPascals(3.4) == Area.FromSquareMetres(0.35294117647058826);")]
        [TestCase("return Force.FromNewtons(1.2) / Energy.FromJoules(3.4) == Wavenumber.FromReciprocalMetres(0.35294117647058826);")]
        [TestCase("return Force.FromNewtons(1.2) / Speed.FromMetresPerSecond(3.4) == MassFlow.FromKilogramsPerSecond(0.35294117647058826);")]
        [TestCase("return Force.FromNewtons(1.2) / Frequency.FromHertz(3.4) == Momentum.FromNewtonSecond(0.35294117647058826);")]
        [TestCase("return Force.FromNewtons(1.2) / Acceleration.FromMetresPerSecondSquared(3.4) == Mass.FromKilograms(0.35294117647058826);")]
        [TestCase("return Force.FromNewtons(1.2) / Stiffness.FromNewtonsPerMetre(3.4) == Length.FromMetres(0.35294117647058826);")]
        [TestCase("return Force.FromNewtons(1.2) / ForcePerUnitless.FromNewtonsPerUnitless(3.4) == Unitless.FromScalar(0.35294117647058826);")]
        [TestCase("return Force.FromNewtons(1.2) / Momentum.FromNewtonSecond(3.4) == Frequency.FromHertz(0.35294117647058826);")]
        [TestCase("return Force.FromNewtons(1.2) / Wavenumber.FromReciprocalMetres(3.4) == Energy.FromJoules(0.35294117647058826);")]
        [TestCase("return Force.FromNewtons(1.2) / MassFlow.FromKilogramsPerSecond(3.4) == Speed.FromMetresPerSecond(0.35294117647058826);")]
        [TestCase("return Pressure.FromPascals(1.2) / Density.FromKilogramsPerCubicMetre(3.4) == SpecificEnergy.FromJoulesPerKilogram(0.35294117647058826);")]
        [TestCase("return Pressure.FromPascals(1.2) / Acceleration.FromMetresPerSecondSquared(3.4) == AreaDensity.FromKilogramsPerSquareMetre(0.35294117647058826);")]
        [TestCase("return Pressure.FromPascals(1.2) / Stiffness.FromNewtonsPerMetre(3.4) == Wavenumber.FromReciprocalMetres(0.35294117647058826);")]
        [TestCase("return Pressure.FromPascals(1.2) / SpecificEnergy.FromJoulesPerKilogram(3.4) == Density.FromKilogramsPerCubicMetre(0.35294117647058826);")]
        [TestCase("return Pressure.FromPascals(1.2) / Wavenumber.FromReciprocalMetres(3.4) == Stiffness.FromNewtonsPerMetre(0.35294117647058826);")]
        [TestCase("return Pressure.FromPascals(1.2) / AreaDensity.FromKilogramsPerSquareMetre(3.4) == Acceleration.FromMetresPerSecondSquared(0.35294117647058826);")]
        [TestCase("return Density.FromKilogramsPerCubicMetre(1.2) / Wavenumber.FromReciprocalMetres(3.4) == AreaDensity.FromKilogramsPerSquareMetre(0.35294117647058826);")]
        [TestCase("return Density.FromKilogramsPerCubicMetre(1.2) / AreaDensity.FromKilogramsPerSquareMetre(3.4) == Wavenumber.FromReciprocalMetres(0.35294117647058826);")]
        [TestCase("return Energy.FromJoules(1.2) / Mass.FromKilograms(3.4) == SpecificEnergy.FromJoulesPerKilogram(0.35294117647058826);")]
        [TestCase("return Energy.FromJoules(1.2) / Length.FromMetres(3.4) == Force.FromNewtons(0.35294117647058826);")]
        [TestCase("return Energy.FromJoules(1.2) / Time.FromSeconds(3.4) == Power.FromWatts(0.35294117647058826);")]
        [TestCase("return Energy.FromJoules(1.2) / Angle.FromRadians(3.4) == Torque.FromNewtonMetres(0.35294117647058826);")]
        [TestCase("return Energy.FromJoules(1.2) / Current.FromAmperes(3.4) == MagneticFlux.FromWebers(0.35294117647058826);")]
        [TestCase("return Energy.FromJoules(1.2) / Area.FromSquareMetres(3.4) == Stiffness.FromNewtonsPerMetre(0.35294117647058826);")]
        [TestCase("return Energy.FromJoules(1.2) / Volume.FromCubicMetres(3.4) == Pressure.FromPascals(0.35294117647058826);")]
        [TestCase("return Energy.FromJoules(1.2) / Force.FromNewtons(3.4) == Length.FromMetres(0.35294117647058826);")]
        [TestCase("return Energy.FromJoules(1.2) / Pressure.FromPascals(3.4) == Volume.FromCubicMetres(0.35294117647058826);")]
        [TestCase("return Energy.FromJoules(1.2) / Power.FromWatts(3.4) == Time.FromSeconds(0.35294117647058826);")]
        [TestCase("return Energy.FromJoules(1.2) / Speed.FromMetresPerSecond(3.4) == Momentum.FromNewtonSecond(0.35294117647058826);")]
        [TestCase("return Energy.FromJoules(1.2) / Torque.FromNewtonMetres(3.4) == Angle.FromRadians(0.35294117647058826);")]
        [TestCase("return Energy.FromJoules(1.2) / Stiffness.FromNewtonsPerMetre(3.4) == Area.FromSquareMetres(0.35294117647058826);")]
        [TestCase("return Energy.FromJoules(1.2) / Voltage.FromVolts(3.4) == ElectricCharge.FromCoulombs(0.35294117647058826);")]
        [TestCase("return Energy.FromJoules(1.2) / SpecificEnergy.FromJoulesPerKilogram(3.4) == Mass.FromKilograms(0.35294117647058826);")]
        [TestCase("return Energy.FromJoules(1.2) / ElectricCharge.FromCoulombs(3.4) == Voltage.FromVolts(0.35294117647058826);")]
        [TestCase("return Energy.FromJoules(1.2) / MagneticFlux.FromWebers(3.4) == Current.FromAmperes(0.35294117647058826);")]
        [TestCase("return Energy.FromJoules(1.2) / Momentum.FromNewtonSecond(3.4) == Speed.FromMetresPerSecond(0.35294117647058826);")]
        [TestCase("return Energy.FromJoules(1.2) / MassFlow.FromKilogramsPerSecond(3.4) == KinematicViscosity.FromSquareMetresPerSecond(0.35294117647058826);")]
        [TestCase("return Energy.FromJoules(1.2) / KinematicViscosity.FromSquareMetresPerSecond(3.4) == MassFlow.FromKilogramsPerSecond(0.35294117647058826);")]
        [TestCase("return Power.FromWatts(1.2) / Current.FromAmperes(3.4) == Voltage.FromVolts(0.35294117647058826);")]
        [TestCase("return Power.FromWatts(1.2) / Force.FromNewtons(3.4) == Speed.FromMetresPerSecond(0.35294117647058826);")]
        [TestCase("return Power.FromWatts(1.2) / Pressure.FromPascals(3.4) == VolumetricFlow.FromCubicMetresPerSecond(0.35294117647058826);")]
        [TestCase("return Power.FromWatts(1.2) / Energy.FromJoules(3.4) == Frequency.FromHertz(0.35294117647058826);")]
        [TestCase("return Power.FromWatts(1.2) / Speed.FromMetresPerSecond(3.4) == Force.FromNewtons(0.35294117647058826);")]
        [TestCase("return Power.FromWatts(1.2) / AngularSpeed.FromRadiansPerSecond(3.4) == Torque.FromNewtonMetres(0.35294117647058826);")]
        [TestCase("return Power.FromWatts(1.2) / Frequency.FromHertz(3.4) == Energy.FromJoules(0.35294117647058826);")]
        [TestCase("return Power.FromWatts(1.2) / Acceleration.FromMetresPerSecondSquared(3.4) == Momentum.FromNewtonSecond(0.35294117647058826);")]
        [TestCase("return Power.FromWatts(1.2) / Torque.FromNewtonMetres(3.4) == AngularSpeed.FromRadiansPerSecond(0.35294117647058826);")]
        [TestCase("return Power.FromWatts(1.2) / Stiffness.FromNewtonsPerMetre(3.4) == KinematicViscosity.FromSquareMetresPerSecond(0.35294117647058826);")]
        [TestCase("return Power.FromWatts(1.2) / VolumetricFlow.FromCubicMetresPerSecond(3.4) == Pressure.FromPascals(0.35294117647058826);")]
        [TestCase("return Power.FromWatts(1.2) / Voltage.FromVolts(3.4) == Current.FromAmperes(0.35294117647058826);")]
        [TestCase("return Power.FromWatts(1.2) / SpecificEnergy.FromJoulesPerKilogram(3.4) == MassFlow.FromKilogramsPerSecond(0.35294117647058826);")]
        [TestCase("return Power.FromWatts(1.2) / Momentum.FromNewtonSecond(3.4) == Acceleration.FromMetresPerSecondSquared(0.35294117647058826);")]
        [TestCase("return Power.FromWatts(1.2) / MassFlow.FromKilogramsPerSecond(3.4) == SpecificEnergy.FromJoulesPerKilogram(0.35294117647058826);")]
        [TestCase("return Power.FromWatts(1.2) / KinematicViscosity.FromSquareMetresPerSecond(3.4) == Stiffness.FromNewtonsPerMetre(0.35294117647058826);")]
        [TestCase("return Speed.FromMetresPerSecond(1.2) / Length.FromMetres(3.4) == Frequency.FromHertz(0.35294117647058826);")]
        [TestCase("return Speed.FromMetresPerSecond(1.2) / Time.FromSeconds(3.4) == Acceleration.FromMetresPerSecondSquared(0.35294117647058826);")]
        [TestCase("return Speed.FromMetresPerSecond(1.2) / Frequency.FromHertz(3.4) == Length.FromMetres(0.35294117647058826);")]
        [TestCase("return Speed.FromMetresPerSecond(1.2) / Acceleration.FromMetresPerSecondSquared(3.4) == Time.FromSeconds(0.35294117647058826);")]
        [TestCase("return Speed.FromMetresPerSecond(1.2) / Wavenumber.FromReciprocalMetres(3.4) == KinematicViscosity.FromSquareMetresPerSecond(0.35294117647058826);")]
        [TestCase("return Speed.FromMetresPerSecond(1.2) / KinematicViscosity.FromSquareMetresPerSecond(3.4) == Wavenumber.FromReciprocalMetres(0.35294117647058826);")]
        [TestCase("return AngularSpeed.FromRadiansPerSecond(1.2) / Time.FromSeconds(3.4) == AngularAcceleration.FromRadiansPerSecondSquared(0.35294117647058826);")]
        [TestCase("return AngularSpeed.FromRadiansPerSecond(1.2) / Angle.FromRadians(3.4) == Frequency.FromHertz(0.35294117647058826);")]
        [TestCase("return AngularSpeed.FromRadiansPerSecond(1.2) / Frequency.FromHertz(3.4) == Angle.FromRadians(0.35294117647058826);")]
        [TestCase("return AngularSpeed.FromRadiansPerSecond(1.2) / AngularAcceleration.FromRadiansPerSecondSquared(3.4) == Time.FromSeconds(0.35294117647058826);")]
        [TestCase("return Frequency.FromHertz(1.2) / Speed.FromMetresPerSecond(3.4) == Wavenumber.FromReciprocalMetres(0.35294117647058826);")]
        [TestCase("return Frequency.FromHertz(1.2) / Wavenumber.FromReciprocalMetres(3.4) == Speed.FromMetresPerSecond(0.35294117647058826);")]
        [TestCase("return Acceleration.FromMetresPerSecondSquared(1.2) / Time.FromSeconds(3.4) == Jerk.FromMetresPerSecondCubed(0.35294117647058826);")]
        [TestCase("return Acceleration.FromMetresPerSecondSquared(1.2) / Speed.FromMetresPerSecond(3.4) == Frequency.FromHertz(0.35294117647058826);")]
        [TestCase("return Acceleration.FromMetresPerSecondSquared(1.2) / Frequency.FromHertz(3.4) == Speed.FromMetresPerSecond(0.35294117647058826);")]
        [TestCase("return Acceleration.FromMetresPerSecondSquared(1.2) / SpecificEnergy.FromJoulesPerKilogram(3.4) == Wavenumber.FromReciprocalMetres(0.35294117647058826);")]
        [TestCase("return Acceleration.FromMetresPerSecondSquared(1.2) / Jerk.FromMetresPerSecondCubed(3.4) == Time.FromSeconds(0.35294117647058826);")]
        [TestCase("return Acceleration.FromMetresPerSecondSquared(1.2) / Wavenumber.FromReciprocalMetres(3.4) == SpecificEnergy.FromJoulesPerKilogram(0.35294117647058826);")]
        [TestCase("return Stiffness.FromNewtonsPerMetre(1.2) / Length.FromMetres(3.4) == Pressure.FromPascals(0.35294117647058826);")]
        [TestCase("return Stiffness.FromNewtonsPerMetre(1.2) / Current.FromAmperes(3.4) == MagneticFieldStrength.FromTeslas(0.35294117647058826);")]
        [TestCase("return Stiffness.FromNewtonsPerMetre(1.2) / Force.FromNewtons(3.4) == Wavenumber.FromReciprocalMetres(0.35294117647058826);")]
        [TestCase("return Stiffness.FromNewtonsPerMetre(1.2) / Pressure.FromPascals(3.4) == Length.FromMetres(0.35294117647058826);")]
        [TestCase("return Stiffness.FromNewtonsPerMetre(1.2) / Frequency.FromHertz(3.4) == MassFlow.FromKilogramsPerSecond(0.35294117647058826);")]
        [TestCase("return Stiffness.FromNewtonsPerMetre(1.2) / SpecificEnergy.FromJoulesPerKilogram(3.4) == AreaDensity.FromKilogramsPerSquareMetre(0.35294117647058826);")]
        [TestCase("return Stiffness.FromNewtonsPerMetre(1.2) / MagneticFieldStrength.FromTeslas(3.4) == Current.FromAmperes(0.35294117647058826);")]
        [TestCase("return Stiffness.FromNewtonsPerMetre(1.2) / Wavenumber.FromReciprocalMetres(3.4) == Force.FromNewtons(0.35294117647058826);")]
        [TestCase("return Stiffness.FromNewtonsPerMetre(1.2) / AreaDensity.FromKilogramsPerSquareMetre(3.4) == SpecificEnergy.FromJoulesPerKilogram(0.35294117647058826);")]
        [TestCase("return Stiffness.FromNewtonsPerMetre(1.2) / MassFlow.FromKilogramsPerSecond(3.4) == Frequency.FromHertz(0.35294117647058826);")]
        [TestCase("return VolumetricFlow.FromCubicMetresPerSecond(1.2) / Length.FromMetres(3.4) == KinematicViscosity.FromSquareMetresPerSecond(0.35294117647058826);")]
        [TestCase("return VolumetricFlow.FromCubicMetresPerSecond(1.2) / Area.FromSquareMetres(3.4) == Speed.FromMetresPerSecond(0.35294117647058826);")]
        [TestCase("return VolumetricFlow.FromCubicMetresPerSecond(1.2) / Volume.FromCubicMetres(3.4) == Frequency.FromHertz(0.35294117647058826);")]
        [TestCase("return VolumetricFlow.FromCubicMetresPerSecond(1.2) / Speed.FromMetresPerSecond(3.4) == Area.FromSquareMetres(0.35294117647058826);")]
        [TestCase("return VolumetricFlow.FromCubicMetresPerSecond(1.2) / Frequency.FromHertz(3.4) == Volume.FromCubicMetres(0.35294117647058826);")]
        [TestCase("return VolumetricFlow.FromCubicMetresPerSecond(1.2) / SpecificVolume.FromCubicMetresPerKilogram(3.4) == MassFlow.FromKilogramsPerSecond(0.35294117647058826);")]
        [TestCase("return VolumetricFlow.FromCubicMetresPerSecond(1.2) / MassFlow.FromKilogramsPerSecond(3.4) == SpecificVolume.FromCubicMetresPerKilogram(0.35294117647058826);")]
        [TestCase("return VolumetricFlow.FromCubicMetresPerSecond(1.2) / KinematicViscosity.FromSquareMetresPerSecond(3.4) == Length.FromMetres(0.35294117647058826);")]
        [TestCase("return Voltage.FromVolts(1.2) / Current.FromAmperes(3.4) == Resistance.FromOhms(0.35294117647058826);")]
        [TestCase("return Voltage.FromVolts(1.2) / Frequency.FromHertz(3.4) == MagneticFlux.FromWebers(0.35294117647058826);")]
        [TestCase("return Voltage.FromVolts(1.2) / Resistance.FromOhms(3.4) == Current.FromAmperes(0.35294117647058826);")]
        [TestCase("return Voltage.FromVolts(1.2) / MagneticFlux.FromWebers(3.4) == Frequency.FromHertz(0.35294117647058826);")]
        [TestCase("return Voltage.FromVolts(1.2) / MagneticFieldStrength.FromTeslas(3.4) == KinematicViscosity.FromSquareMetresPerSecond(0.35294117647058826);")]
        [TestCase("return Voltage.FromVolts(1.2) / KinematicViscosity.FromSquareMetresPerSecond(3.4) == MagneticFieldStrength.FromTeslas(0.35294117647058826);")]
        [TestCase("return Resistance.FromOhms(1.2) / Frequency.FromHertz(3.4) == Inductance.FromHenrys(0.35294117647058826);")]
        [TestCase("return Resistance.FromOhms(1.2) / Inductance.FromHenrys(3.4) == Frequency.FromHertz(0.35294117647058826);")]
        [TestCase("return SpecificEnergy.FromJoulesPerKilogram(1.2) / Length.FromMetres(3.4) == Acceleration.FromMetresPerSecondSquared(0.35294117647058826);")]
        [TestCase("return SpecificEnergy.FromJoulesPerKilogram(1.2) / Pressure.FromPascals(3.4) == SpecificVolume.FromCubicMetresPerKilogram(0.35294117647058826);")]
        [TestCase("return SpecificEnergy.FromJoulesPerKilogram(1.2) / Speed.FromMetresPerSecond(3.4) == Speed.FromMetresPerSecond(0.35294117647058826);")]
        [TestCase("return SpecificEnergy.FromJoulesPerKilogram(1.2) / Frequency.FromHertz(3.4) == KinematicViscosity.FromSquareMetresPerSecond(0.35294117647058826);")]
        [TestCase("return SpecificEnergy.FromJoulesPerKilogram(1.2) / Acceleration.FromMetresPerSecondSquared(3.4) == Length.FromMetres(0.35294117647058826);")]
        [TestCase("return SpecificEnergy.FromJoulesPerKilogram(1.2) / SpecificVolume.FromCubicMetresPerKilogram(3.4) == Pressure.FromPascals(0.35294117647058826);")]
        [TestCase("return SpecificEnergy.FromJoulesPerKilogram(1.2) / KinematicViscosity.FromSquareMetresPerSecond(3.4) == Frequency.FromHertz(0.35294117647058826);")]
        [TestCase("return ElectricCharge.FromCoulombs(1.2) / Time.FromSeconds(3.4) == Current.FromAmperes(0.35294117647058826);")]
        [TestCase("return ElectricCharge.FromCoulombs(1.2) / Current.FromAmperes(3.4) == Time.FromSeconds(0.35294117647058826);")]
        [TestCase("return ElectricCharge.FromCoulombs(1.2) / Voltage.FromVolts(3.4) == Capacitance.FromFarads(0.35294117647058826);")]
        [TestCase("return ElectricCharge.FromCoulombs(1.2) / Capacitance.FromFarads(3.4) == Voltage.FromVolts(0.35294117647058826);")]
        [TestCase("return ElectricCharge.FromCoulombs(1.2) / MagneticFlux.FromWebers(3.4) == ElectricalConductance.FromSiemens(0.35294117647058826);")]
        [TestCase("return ElectricCharge.FromCoulombs(1.2) / ElectricalConductance.FromSiemens(3.4) == MagneticFlux.FromWebers(0.35294117647058826);")]
        [TestCase("return Inductance.FromHenrys(1.2) / Time.FromSeconds(3.4) == Resistance.FromOhms(0.35294117647058826);")]
        [TestCase("return Inductance.FromHenrys(1.2) / Resistance.FromOhms(3.4) == Time.FromSeconds(0.35294117647058826);")]
        [TestCase("return Capacitance.FromFarads(1.2) / Time.FromSeconds(3.4) == ElectricalConductance.FromSiemens(0.35294117647058826);")]
        [TestCase("return Capacitance.FromFarads(1.2) / ElectricalConductance.FromSiemens(3.4) == Time.FromSeconds(0.35294117647058826);")]
        [TestCase("return AngularAcceleration.FromRadiansPerSecondSquared(1.2) / Time.FromSeconds(3.4) == AngularJerk.FromRadiansPerSecondCubed(0.35294117647058826);")]
        [TestCase("return AngularAcceleration.FromRadiansPerSecondSquared(1.2) / AngularSpeed.FromRadiansPerSecond(3.4) == Frequency.FromHertz(0.35294117647058826);")]
        [TestCase("return AngularAcceleration.FromRadiansPerSecondSquared(1.2) / Frequency.FromHertz(3.4) == AngularSpeed.FromRadiansPerSecond(0.35294117647058826);")]
        [TestCase("return AngularAcceleration.FromRadiansPerSecondSquared(1.2) / AngularJerk.FromRadiansPerSecondCubed(3.4) == Time.FromSeconds(0.35294117647058826);")]
        [TestCase("return AngularJerk.FromRadiansPerSecondCubed(1.2) / Frequency.FromHertz(3.4) == AngularAcceleration.FromRadiansPerSecondSquared(0.35294117647058826);")]
        [TestCase("return AngularJerk.FromRadiansPerSecondCubed(1.2) / AngularAcceleration.FromRadiansPerSecondSquared(3.4) == Frequency.FromHertz(0.35294117647058826);")]
        [TestCase("return Jerk.FromMetresPerSecondCubed(1.2) / Frequency.FromHertz(3.4) == Acceleration.FromMetresPerSecondSquared(0.35294117647058826);")]
        [TestCase("return Jerk.FromMetresPerSecondCubed(1.2) / Acceleration.FromMetresPerSecondSquared(3.4) == Frequency.FromHertz(0.35294117647058826);")]
        [TestCase("return LengthPerUnitless.FromMetresPerUnitless(1.2) / Flexibility.FromMetresPerNewton(3.4) == ForcePerUnitless.FromNewtonsPerUnitless(0.35294117647058826);")]
        [TestCase("return LengthPerUnitless.FromMetresPerUnitless(1.2) / ForcePerUnitless.FromNewtonsPerUnitless(3.4) == Flexibility.FromMetresPerNewton(0.35294117647058826);")]
        [TestCase("return ForcePerUnitless.FromNewtonsPerUnitless(1.2) / Stiffness.FromNewtonsPerMetre(3.4) == LengthPerUnitless.FromMetresPerUnitless(0.35294117647058826);")]
        [TestCase("return ForcePerUnitless.FromNewtonsPerUnitless(1.2) / LengthPerUnitless.FromMetresPerUnitless(3.4) == Stiffness.FromNewtonsPerMetre(0.35294117647058826);")]
        [TestCase("return LuminousFlux.FromLumens(1.2) / LuminousIntensity.FromCandelas(3.4) == SolidAngle.FromSteradians(0.35294117647058826);")]
        [TestCase("return LuminousFlux.FromLumens(1.2) / SolidAngle.FromSteradians(3.4) == LuminousIntensity.FromCandelas(0.35294117647058826);")]
        [TestCase("return LuminousFlux.FromLumens(1.2) / Area.FromSquareMetres(3.4) == Illuminance.FromLux(0.35294117647058826);")]
        [TestCase("return LuminousFlux.FromLumens(1.2) / Illuminance.FromLux(3.4) == Area.FromSquareMetres(0.35294117647058826);")]
        [TestCase("return MagneticFlux.FromWebers(1.2) / Time.FromSeconds(3.4) == Voltage.FromVolts(0.35294117647058826);")]
        [TestCase("return MagneticFlux.FromWebers(1.2) / Current.FromAmperes(3.4) == Inductance.FromHenrys(0.35294117647058826);")]
        [TestCase("return MagneticFlux.FromWebers(1.2) / Area.FromSquareMetres(3.4) == MagneticFieldStrength.FromTeslas(0.35294117647058826);")]
        [TestCase("return MagneticFlux.FromWebers(1.2) / Voltage.FromVolts(3.4) == Time.FromSeconds(0.35294117647058826);")]
        [TestCase("return MagneticFlux.FromWebers(1.2) / Resistance.FromOhms(3.4) == ElectricCharge.FromCoulombs(0.35294117647058826);")]
        [TestCase("return MagneticFlux.FromWebers(1.2) / ElectricCharge.FromCoulombs(3.4) == Resistance.FromOhms(0.35294117647058826);")]
        [TestCase("return MagneticFlux.FromWebers(1.2) / Inductance.FromHenrys(3.4) == Current.FromAmperes(0.35294117647058826);")]
        [TestCase("return MagneticFlux.FromWebers(1.2) / MagneticFieldStrength.FromTeslas(3.4) == Area.FromSquareMetres(0.35294117647058826);")]
        [TestCase("return ElectricalConductance.FromSiemens(1.2) / Frequency.FromHertz(3.4) == Capacitance.FromFarads(0.35294117647058826);")]
        [TestCase("return ElectricalConductance.FromSiemens(1.2) / Capacitance.FromFarads(3.4) == Frequency.FromHertz(0.35294117647058826);")]
        [TestCase("return CatalyticActivity.FromKatals(1.2) / AmountOfSubstance.FromMoles(3.4) == Frequency.FromHertz(0.35294117647058826);")]
        [TestCase("return CatalyticActivity.FromKatals(1.2) / Frequency.FromHertz(3.4) == AmountOfSubstance.FromMoles(0.35294117647058826);")]
        [TestCase("return Momentum.FromNewtonSecond(1.2) / Mass.FromKilograms(3.4) == Speed.FromMetresPerSecond(0.35294117647058826);")]
        [TestCase("return Momentum.FromNewtonSecond(1.2) / Length.FromMetres(3.4) == MassFlow.FromKilogramsPerSecond(0.35294117647058826);")]
        [TestCase("return Momentum.FromNewtonSecond(1.2) / Time.FromSeconds(3.4) == Force.FromNewtons(0.35294117647058826);")]
        [TestCase("return Momentum.FromNewtonSecond(1.2) / Force.FromNewtons(3.4) == Time.FromSeconds(0.35294117647058826);")]
        [TestCase("return Momentum.FromNewtonSecond(1.2) / Speed.FromMetresPerSecond(3.4) == Mass.FromKilograms(0.35294117647058826);")]
        [TestCase("return Momentum.FromNewtonSecond(1.2) / VolumetricFlow.FromCubicMetresPerSecond(3.4) == AreaDensity.FromKilogramsPerSquareMetre(0.35294117647058826);")]
        [TestCase("return Momentum.FromNewtonSecond(1.2) / AreaDensity.FromKilogramsPerSquareMetre(3.4) == VolumetricFlow.FromCubicMetresPerSecond(0.35294117647058826);")]
        [TestCase("return Momentum.FromNewtonSecond(1.2) / MassFlow.FromKilogramsPerSecond(3.4) == Length.FromMetres(0.35294117647058826);")]
        [TestCase("return Wavenumber.FromReciprocalMetres(1.2) / Pressure.FromPascals(3.4) == Flexibility.FromMetresPerNewton(0.35294117647058826);")]
        [TestCase("return Wavenumber.FromReciprocalMetres(1.2) / Flexibility.FromMetresPerNewton(3.4) == Pressure.FromPascals(0.35294117647058826);")]
        [TestCase("return AreaDensity.FromKilogramsPerSquareMetre(1.2) / Length.FromMetres(3.4) == Density.FromKilogramsPerCubicMetre(0.35294117647058826);")]
        [TestCase("return AreaDensity.FromKilogramsPerSquareMetre(1.2) / Density.FromKilogramsPerCubicMetre(3.4) == Length.FromMetres(0.35294117647058826);")]
        [TestCase("return MassFlow.FromKilogramsPerSecond(1.2) / Mass.FromKilograms(3.4) == Frequency.FromHertz(0.35294117647058826);")]
        [TestCase("return MassFlow.FromKilogramsPerSecond(1.2) / Time.FromSeconds(3.4) == Stiffness.FromNewtonsPerMetre(0.35294117647058826);")]
        [TestCase("return MassFlow.FromKilogramsPerSecond(1.2) / Density.FromKilogramsPerCubicMetre(3.4) == VolumetricFlow.FromCubicMetresPerSecond(0.35294117647058826);")]
        [TestCase("return MassFlow.FromKilogramsPerSecond(1.2) / Frequency.FromHertz(3.4) == Mass.FromKilograms(0.35294117647058826);")]
        [TestCase("return MassFlow.FromKilogramsPerSecond(1.2) / Stiffness.FromNewtonsPerMetre(3.4) == Time.FromSeconds(0.35294117647058826);")]
        [TestCase("return MassFlow.FromKilogramsPerSecond(1.2) / VolumetricFlow.FromCubicMetresPerSecond(3.4) == Density.FromKilogramsPerCubicMetre(0.35294117647058826);")]
        [TestCase("return MassFlow.FromKilogramsPerSecond(1.2) / ElectricCharge.FromCoulombs(3.4) == MagneticFieldStrength.FromTeslas(0.35294117647058826);")]
        [TestCase("return MassFlow.FromKilogramsPerSecond(1.2) / MagneticFieldStrength.FromTeslas(3.4) == ElectricCharge.FromCoulombs(0.35294117647058826);")]
        [TestCase("return MassFlow.FromKilogramsPerSecond(1.2) / CatalyticActivity.FromKatals(3.4) == MolarMass.FromKilogramsPerMole(0.35294117647058826);")]
        [TestCase("return MassFlow.FromKilogramsPerSecond(1.2) / Momentum.FromNewtonSecond(3.4) == Wavenumber.FromReciprocalMetres(0.35294117647058826);")]
        [TestCase("return MassFlow.FromKilogramsPerSecond(1.2) / Wavenumber.FromReciprocalMetres(3.4) == Momentum.FromNewtonSecond(0.35294117647058826);")]
        [TestCase("return MassFlow.FromKilogramsPerSecond(1.2) / AreaDensity.FromKilogramsPerSquareMetre(3.4) == KinematicViscosity.FromSquareMetresPerSecond(0.35294117647058826);")]
        [TestCase("return MassFlow.FromKilogramsPerSecond(1.2) / KinematicViscosity.FromSquareMetresPerSecond(3.4) == AreaDensity.FromKilogramsPerSquareMetre(0.35294117647058826);")]
        [TestCase("return MassFlow.FromKilogramsPerSecond(1.2) / MolarMass.FromKilogramsPerMole(3.4) == CatalyticActivity.FromKatals(0.35294117647058826);")]
        [TestCase("return KinematicViscosity.FromSquareMetresPerSecond(1.2) / Length.FromMetres(3.4) == Speed.FromMetresPerSecond(0.35294117647058826);")]
        [TestCase("return KinematicViscosity.FromSquareMetresPerSecond(1.2) / Time.FromSeconds(3.4) == SpecificEnergy.FromJoulesPerKilogram(0.35294117647058826);")]
        [TestCase("return KinematicViscosity.FromSquareMetresPerSecond(1.2) / Area.FromSquareMetres(3.4) == Frequency.FromHertz(0.35294117647058826);")]
        [TestCase("return KinematicViscosity.FromSquareMetresPerSecond(1.2) / Power.FromWatts(3.4) == Flexibility.FromMetresPerNewton(0.35294117647058826);")]
        [TestCase("return KinematicViscosity.FromSquareMetresPerSecond(1.2) / Speed.FromMetresPerSecond(3.4) == Length.FromMetres(0.35294117647058826);")]
        [TestCase("return KinematicViscosity.FromSquareMetresPerSecond(1.2) / Frequency.FromHertz(3.4) == Area.FromSquareMetres(0.35294117647058826);")]
        [TestCase("return KinematicViscosity.FromSquareMetresPerSecond(1.2) / VolumetricFlow.FromCubicMetresPerSecond(3.4) == Wavenumber.FromReciprocalMetres(0.35294117647058826);")]
        [TestCase("return KinematicViscosity.FromSquareMetresPerSecond(1.2) / SpecificEnergy.FromJoulesPerKilogram(3.4) == Time.FromSeconds(0.35294117647058826);")]
        [TestCase("return KinematicViscosity.FromSquareMetresPerSecond(1.2) / Flexibility.FromMetresPerNewton(3.4) == Power.FromWatts(0.35294117647058826);")]
        [TestCase("return KinematicViscosity.FromSquareMetresPerSecond(1.2) / Wavenumber.FromReciprocalMetres(3.4) == VolumetricFlow.FromCubicMetresPerSecond(0.35294117647058826);")]
        public static async Task Divide(string expression)
        {
            Console.WriteLine(1.2 / 3.4);
            var scriptOptions = ScriptOptions.Default.WithReferences(typeof(Length).Assembly)
                .WithImports("Gu.Units");
            var result = await CSharpScript.EvaluateAsync<bool>(expression, scriptOptions).ConfigureAwait(false);
            Assert.AreEqual(true, result);
        }

        [Test]
        public static void LengthPerTimeGivesSpeed()
        {
            var l = Length.FromMillimetres(1.2);
            var t = Time.FromMinutes(5);
            var speed = l / t;
            Assert.IsInstanceOf<Speed>(speed);
            Assert.AreEqual(1.2 / 5, speed.MillimetresPerMinute, 1E-6);

            var l2 = speed * t;
            Assert.IsInstanceOf<Length>(l2);
            Assert.AreEqual(l, l2);
        }

        [Test]
        public static void LengthTimesLengthGivesArea()
        {
            var l1 = Length.FromMillimetres(1.2);
            var l2 = Length.FromMetres(5);
            var area = l1 * l2;
            Assert.IsInstanceOf<Area>(area);
            Assert.AreEqual(1.2E-3 * 5, area.SquareMetres, 1E-6);

            var length = area / l2;
            Assert.AreEqual(l1, length);
        }

        [Test]
        public static void DensityTimesVolumeGivesMass()
        {
            var rho = Density.FromGramsPerCubicCentimetre(1.2);
            var v = Volume.FromCubicCentimetres(2);
            var m = rho * v;
            Assert.IsInstanceOf<Mass>(m);
            Assert.AreEqual(1.2 * 2, m.Grams, 1E-6);

            var density = m / v;
            Assert.AreEqual(rho, density);
        }
    }
}
